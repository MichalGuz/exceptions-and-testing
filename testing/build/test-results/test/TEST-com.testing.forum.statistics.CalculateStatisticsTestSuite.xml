<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.testing.forum.statistics.CalculateStatisticsTestSuite" tests="9" skipped="0" failures="2" errors="0" timestamp="2019-06-21T21:34:13" hostname="Dell-Komputer" time="1.595">
  <properties/>
  <testcase name="test2OfCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="1.143"/>
  <testcase name="test4OfCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.01"/>
  <testcase name="test5ofCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.142"/>
  <testcase name="test8OfCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.15">
    <failure message="org.mockito.exceptions.misusing.WrongTypeOfReturnValue: &#10;Integer cannot be returned by usersNames()&#10;usersNames() should return List&#10;***&#10;If you're unsure why you're getting above error read on.&#10;Due to the nature of the syntax above problem might occur because:&#10;1. This exception *might* occur in wrongly written multi-threaded tests.&#10;   Please refer to Mockito FAQ on limitations of concurrency testing.&#10;2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - &#10;   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.&#10;" type="org.mockito.exceptions.misusing.WrongTypeOfReturnValue">org.mockito.exceptions.misusing.WrongTypeOfReturnValue: 
Integer cannot be returned by usersNames()
usersNames() should return List
***
If you're unsure why you're getting above error read on.
Due to the nature of the syntax above problem might occur because:
1. This exception *might* occur in wrongly written multi-threaded tests.
   Please refer to Mockito FAQ on limitations of concurrency testing.
2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - 
   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.

	at com.testing.forum.statistics.CalculateStatisticsTestSuite.test8OfCalculateAdvStatistics(CalculateStatisticsTestSuite.java:208)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="test0ofCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.004"/>
  <testcase name="test1OfCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.006"/>
  <testcase name="test3OfCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.007"/>
  <testcase name="test6ofCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.003"/>
  <testcase name="test7OfCalculateAdvStatistics" classname="com.testing.forum.statistics.CalculateStatisticsTestSuite" time="0.106">
    <failure message="org.mockito.exceptions.misusing.WrongTypeOfReturnValue: &#10;Integer cannot be returned by usersNames()&#10;usersNames() should return List&#10;***&#10;If you're unsure why you're getting above error read on.&#10;Due to the nature of the syntax above problem might occur because:&#10;1. This exception *might* occur in wrongly written multi-threaded tests.&#10;   Please refer to Mockito FAQ on limitations of concurrency testing.&#10;2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - &#10;   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.&#10;" type="org.mockito.exceptions.misusing.WrongTypeOfReturnValue">org.mockito.exceptions.misusing.WrongTypeOfReturnValue: 
Integer cannot be returned by usersNames()
usersNames() should return List
***
If you're unsure why you're getting above error read on.
Due to the nature of the syntax above problem might occur because:
1. This exception *might* occur in wrongly written multi-threaded tests.
   Please refer to Mockito FAQ on limitations of concurrency testing.
2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - 
   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.

	at com.testing.forum.statistics.CalculateStatisticsTestSuite.test7OfCalculateAdvStatistics(CalculateStatisticsTestSuite.java:191)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <system-out><![CDATA[Test #0 is starting.
Test executing the method calculateAdvStatistics when number of posts equals 0, number of comments equals 10 and numbers of users equals 10
Test #0 is finished.

Test #1 is starting.
Test executing the method calculateAdvStatistics when number of posts equals 1000, number of comments equals 10000 and numbers of users equals 100
Test #1 is finished.

Test #2 is starting.
Test executing the method calculateAdvStatistics when number of posts equals 0 and we don't know numbers of users and comments
Test #2 is finished.

Test #3 is starting.
Test executing the method calculateAdvStatistics when number of posts equals 1000 and we don't know numbers of users and comments
Test #3 is finished.

Test #4 is starting.
Test executing the method calculateAdvStatistics when number of comments equals 0 and we don't know numbers of users and posts
Test #4 is finished.

Test #5 is starting.
Test executing the method calculateAdvStatistics when number of comments is less than number of posts and we don't know the numbers of users, comments and posts
Test #5 is finished.

Test #6 is starting.
Test executing the method calculateAdvStatistics when number of comments is more than number of posts and we don't know the numbers of users, comments and posts
Test #6 is finished.

Test #7 is starting.
Test executing the method calculateAdvStatistics when number of users equals 0 and we don't know numbers of posts and comments
Test #7 is finished.

Test #8 is starting.
Test executing the method calculateAdvStatistics when number of users equals 100 and we don't know numbers of posts and comments
Test #8 is finished.

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
